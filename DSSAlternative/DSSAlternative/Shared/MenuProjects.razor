@inherits DSSProject

<nav class="menu-projects">
    <a href="start" class="link-return">
        <h2>
            Открытые задачи
        </h2>
    </a>
    <ul class="task-menu">
        <CascadingValue Value="this">
            @foreach (var project in Projects)
            {
                <li>
                    <ProjectTask Project="project"></ProjectTask>
                </li>
            }
        </CascadingValue>
    </ul>
    <div class="state-control">
        <button class="add-task action-button" @onclick="CreateProblem">
            <img src="Images/plus-square.svg" />
            <span>Создать новую задачу</span>
        </button>
        @if (Project.Created)
        {
            <h3>Текущая задача</h3>
            <button class="action-button save-as" @onclick="() => Account.SetTemplate(Project)">
                Сохранить как шаблон
            </button>
            <button class="action-button copy" @onclick="CopyJson">
                Скопировать JSON
            </button>
        }
        <h3>Все задачи</h3>
        <button class="action-button save" @onclick="SaveProgress">
            <img src="Images/save.svg" />
            <span>Сохранить прогресс</span>
        </button>
        <button class="action-button load" @onclick="LoadProgress">
            <img src="Images/download.svg" />
            <span>Восстановить прогресс</span>
        </button>
    </div>
</nav>

@code{

    [Inject]
    public IDssJson Json { get; set; }
    [Inject]
    public Services.IClipboard Clipboard { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dss.OnProjectRemoved += StateHasChanged;
    }

    private void CreateProblem()
    {
        Dss.AddProject();
    }

    private void SaveProgress()
    {
        Account.SaveState();
    }
    private void LoadProgress()
    {
        Account.LoadState();
    }
    private async Task CopyJson()
    {
        string text = Json.ToJson(Project);
        await Clipboard.WriteTextAsync(text);
    }
}